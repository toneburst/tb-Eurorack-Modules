function Clock(t,e){this.tempo=t,this.audioContext=null,this.isPlaying=!1,this.startTime,this.lookahead=10,this.scheduleAheadTime=.1,this.nextNoteTime=0,this.notesCounter=0,this.timerWorker=null,this.noteOn=1,this.secondsPerNote=15/this.tempo,this.gateLength=e*this.secondsPerNote,this.newGateLength=this.gateLength,this.newTempo=this.tempo,this.resetPeriod=15,this.autoReset=!1}MicroEvent.mixin(Clock),Clock.prototype.log=function(t){console.log(t)},Clock.prototype.setTempo=function(t){this.newTempo=t},Clock.prototype.setGateLength=function(t){this.newGateLength=Math.min(t,.9)},Clock.prototype.setResetPeriod=function(t){"0"!==t?(this.resetPeriod=Math.round(t),this.autoReset=!0):autoReset=!1},Clock.prototype.isRunning=function(){return this.isPlaying},Clock.prototype.nextNote=function(){var t=this;1===this.noteOn?(this.nextNoteTime+=this.gateLength,this.notesCounter++,this.autoReset&&this.notesCounter%this.resetPeriod===0&&(this.notesCounter=0,t.trigger("reset"))):(this.nextNoteTime+=this.secondsPerNote-this.gateLength,this.tempo!=this.newTempo&&(this.tempo=this.newTempo,this.secondsPerNote=15/this.tempo),this.gateLength!=this.newGateLength&&(this.gateLength=this.newGateLength*this.secondsPerNote)),this.noteOn=1-this.noteOn},Clock.prototype.scheduleNote=function(t){var e=this;1===this.noteOn?(e.trigger("tick",this.notesCounter),e.notesCounter%16===0&&e.trigger("bar")):e.trigger("note-off","Note Off")},Clock.prototype.scheduler=function(){for(;this.nextNoteTime<this.audioContext.currentTime+this.scheduleAheadTime;)this.scheduleNote(this.nextNoteTime),this.nextNote()},Clock.prototype.play=function(){this.nextNoteTime=this.audioContext.currentTime,this.notesCounter=0,this.timerWorker.postMessage("start"),console.log("Starting clock"),this.isPlaying=!0},Clock.prototype.stop=function(){this.timerWorker.postMessage("stop"),console.log("Stopping clock"),this.isPlaying=!1},Clock.prototype.init=function(){var t=this;this.audioContext=new AudioContext;this.audioContext.createOscillator();this.timerWorker=new Worker("js/lib/clock/clockworker.min.js"),this.timerWorker.addEventListener("message",function(e){"tick"==e.data?t.scheduler():console.log("message: "+e.data)},!1),this.timerWorker.postMessage({interval:this.lookahead})};