function TBMWMIDIOut(a){this.instanceid="0";if(a===undefined||a.instanceid===undefined){console.log("WARNING: You should specify a unique instance ID when instantiating the TBWMMIDIOut object.")}else{this.instanceid=a.instanceid}this.savesettingstocookie=false;if(a!==undefined&&a.savesettings===true){this.savesettingstocookie=true}this.idprefix="tbwm-ui";this.outputselectid=this.idprefix+"-outputdevice";if(this.instanceid){this.outputselectid+="-"+this.instanceid}this.channelselectid=this.idprefix+"-channel";if(this.instanceid){this.channelselectid+="-"+this.instanceid}this.testoutputbuttonid=this.idprefix+"-testoutput";if(this.instanceid){this.testoutputbuttonid+="-"+this.instanceid}this.containerclass=this.idprefix;this.havemidi=false;this.havemidiout=false;this.midiaccess={};this.outputs={};this.testnotenum=64;this.outputsettings={device:null,channel:1};this.cookiename="outputprefs";return this}MicroEvent.mixin(TBMWMIDIOut);TBMWMIDIOut.prototype.setcookie=function(b,f,c){var e=new Date();e.setTime(e.getTime()+(c*24*60*60*1000));var a="expires="+e.toUTCString();document.cookie=b+"="+f+"; "+a};TBMWMIDIOut.prototype.getcookie=function(d){var b=d+"=";var a=document.cookie.split(";");for(var e=0;e<a.length;e++){var f=a[e];while(f.charAt(0)==" "){f=f.substring(1)}if(f.indexOf(b)==0){return f.substring(b.length,f.length)}}return null};TBMWMIDIOut.prototype.deletecookie=function(b){var a="Thu, 01 Jan 1970 00:00:01 GMT";document.cookie=name+"=null; "+a};TBMWMIDIOut.prototype.savesettings=function(){if(this.savesettingstocookie){this.setcookie(this.cookiename,JSON.stringify(this.outputsettings),365)}};TBMWMIDIOut.prototype.getsavedsettings=function(){if(this.savesettings){var b=this.getcookie(this.cookiename);if(b){var a=JSON.parse(this.getcookie(this.cookiename));if(a!==null){if(a.device){this.outputsettings.device=a.device}if(a.channel){this.outputsettings.channel=a.channel}}}}};TBMWMIDIOut.prototype.deletesavedsettings=function(){this.deletecookie(this.cookiename)};TBMWMIDIOut.prototype.checkdomelement=function(a){if(a){var b=document.getElementById(a.replace("#",""));if(!b){this.errordomelement(a);return null}else{return b}}else{this.errordomelement();return null}};TBMWMIDIOut.prototype.errordomelement=function(a){var b=(a)?"'"+a+"'":"";var c="Error: Container element "+b+" not found. You need to specify ID of an existing element (with or without leading '#') when calling this method";console.log(c);return c};TBMWMIDIOut.prototype.errornomidi=function(b){this.havemidi=false;var a=b;console.log(a)};TBMWMIDIOut.prototype.errornooutputdevice=function(){this.havemidiout=false;var a="Error: No MIDI output device is accessible.";console.log(a)};TBMWMIDIOut.prototype.channelmessage=function(c,a){var b={noteoff:8,noteon:9,controlchange:11,channelmode:11,programchange:12,channelaftertouch:13,pitchbend:14,allnotesoff:123};if(!b[c]){console.log("Error: MIDI Channel message not found")}else{return(b[c]<<4)+(a-1)}};TBMWMIDIOut.prototype.systemmessage=function(b){var a={sysex:240,timecode:241,songposition:242,songselect:243,tuningrequest:246,sysexend:247,clock:248,start:250,"continue":251,stop:252,activesensing:254,reset:255,};if(!a[b]){console.log("Error: MIDI System message not found")}else{return(a[b]<<4)+(ch-1)}};TBMWMIDIOut.prototype.time=function(b){var a=window.performance.now();if(b){return a+b}else{return a}};TBMWMIDIOut.prototype.init=function(){var b=this;navigator.requestMIDIAccess().then(c,a);function c(d){b.havemidi=true;b.midiaccess=d;b.outputs=b.midiaccess.outputs;if(b.outputs.size>0){b.midiout=b.outputs.values().next().value;b.outputsettings.device=b.midiout.id;b.midiout.open();b.havemidiout=true;b.getsavedsettings();b.setoutputdevice(b.outputsettings.device);b.setoutmidichannel(b.outputsettings.channel)}else{b.errornooutputdevice();b.havemidiout=false;return this}console.log("MIDI system successfully initialised.");b.trigger("midistatus","success")}function a(d){b.havemidi=false;b.havemidiin=false;b.havemidiout=false;console.log("Uh-oh! Something went wrong! Error code: "+d.code);b.trigger("midistatus","fail")}return this};TBMWMIDIOut.prototype.setoutputdevice=function(a){if(this.havemidiout){var b=null;this.outputs.forEach(function(c){if(c.id===a||c.name===a){if(!b){b=c}}});if(b){this.midiout.close();this.midiout=b;this.midiout.open()}else{console.log("Error: MIDI output port "+a+" not available.")}}else{return this}return this};TBMWMIDIOut.prototype.addoutputselect=function(d){if(this.havemidi&&this.havemidiout){var b=this;var a=this.checkdomelement(d.domcontainer);if(!a){return this}if(d.addlabel===true){var c=document.createElement("label");c.setAttribute("for",this.outputselectid);c.innerHTML=(d.labeltext!==undefined)?d.labeltext:"MIDI Output Device";c.setAttribute("class",this.containerclass);a.appendChild(c)}var e=document.createElement("select");e.setAttribute("id",this.outputselectid);e.setAttribute("class",this.containerclass);this.outputs.forEach(function(f){var g=document.createElement("option");g.text=f.name;if(b.outputsettings.device==f.id){g.setAttribute("selected","selected")}g.value=f.id;e.add(g)});a.appendChild(e);e.addEventListener("change",function(){var f=this.value;b.setoutputdevice(f);b.outputsettings.device=f;b.savesettings()})}else{this.errornooutputdevice()}this.savesettings();return this};TBMWMIDIOut.prototype.setoutmidichannel=function(a){this.midichannel=parseInt(a)};TBMWMIDIOut.prototype.addoutchannelselect=function(g){if(this.havemidi&&this.havemidiout){var b=this.checkdomelement(g.domcontainer);if(!b){return this}if(g.addlabel===true){var c=document.createElement("label");c.setAttribute("for",this.channelselectid);c.innerHTML=(g.labeltext!==undefined)?g.labeltext:"MIDI Output Channel";c.setAttribute("class",this.containerclass);b.appendChild(c)}var f=document.createElement("select");f.setAttribute("id",this.channelselectid);f.setAttribute("class",this.containerclass);for(var e=1;e<17;e++){var d=document.createElement("option");d.text=e;d.value=e;if(this.outputsettings.channel===e){d.setAttribute("selected","selected")}f.add(d)}b.appendChild(f);var a=this;f.addEventListener("change",function(){a.outputsettings.channel=parseInt(this.value);a.setoutmidichannel(a.outputsettings.channel);a.savesettings()})}else{return this}return this};TBMWMIDIOut.prototype.addtestbutton=function(c){if(this.havemidi&&this.havemidiout){var b=this.checkdomelement(c.domcontainer);if(!b){return this}var d=document.createElement("button");d.setAttribute("id",this.testoutputbuttonid);d.setAttribute("class",this.containerclass);d.innerHTML="Test MIDI Out";b.appendChild(d);var a=this;d.addEventListener("mousedown",function(){a.send_noteon(null,a.testnotenum,127,null)},false);d.addEventListener("mouseup",function(){a.send_noteoff(null,a.testnotenum,127,null)},false)}else{return this}return this};TBMWMIDIOut.prototype.send_noteon=function(e,c,d,a){if(this.havemidi&&this.havemidiout){var b=(e)?e:this.midichannel;var f=(a)?this.time(a):this.time();this.midiout.send([this.channelmessage("noteon",b),c,d],f)}else{return this}return this};TBMWMIDIOut.prototype.send_noteoff=function(e,c,d,a){if(this.havemidi&&this.havemidiout){var b=(e)?e:this.midichannel;var f=(a)?this.time(a):this.time();this.midiout.send([this.channelmessage("noteoff",b),c,d],f)}else{return this}return this};TBMWMIDIOut.prototype.send_allnotesoff=function(c,a){if(this.havemidi&&this.havemidiout){var b=(c)?c:this.midichannel;var d=(a)?this.time(a):this.time();this.midiout.send([this.channelmessage("allnotesoff",b),0,0],this.time())}else{return this}return this};TBMWMIDIOut.prototype.send_controller=function(c,f,d,a){if(this.havemidi&&this.havemidiout){var b=(c)?c:this.midichannel;var e=(a)?this.time(a):this.time();this.midiout.send([this.channelmessage("controller",b),f,d],e)}else{return this}return this};TBMWMIDIOut.prototype.send_clocktick=function(){if(this.havemidi&&this.havemidiout){this.midiout.send([this.systemmessage("clock")],this.time())}else{return this}return this};TBMWMIDIOut.prototype.send_clockstop=function(){if(this.havemidi&&this.havemidiout){this.midiout.send([this.systemmessage("stop")],this.time())}else{return this}return this};TBMWMIDIOut.prototype.send_clockcontinue=function(){if(this.havemidi&&this.havemidiout){this.midiout.send([this.systemmessage("continue")],this.time())}else{return this}return this};