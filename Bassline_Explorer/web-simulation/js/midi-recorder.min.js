function Recorder(){this.isrecording=!1,this.ticks=0,this.midixmlheader='<?xml version="1.0"?><!DOCTYPE MIDIFile SYSTEM "http://www.musicxml.org/dtds/midixml.dtd"><MIDIFile><Format>1</Format><TrackCount>2</TrackCount><TicksPerBeat>8</TicksPerBeat><TimestampType>Absolute</TimestampType>',this.midixmltrk0='<Track Number="0"><Event><Absolute>0</Absolute><TimeSignature Numerator="4" LogDenominator="2" MIDIClocksPerMetronomeClick="24" ThirtySecondsPer24Clocks="8"/></Event><Event><Absolute>0</Absolute><SetTempo Value="371520"/></Event><Event><Absolute>0</Absolute><EndOfTrack/></Event></Track>',this.midixmltrk1=null,this.midixmlclose="</MIDIFile>",this.midixml=null}MicroEvent.mixin(Recorder),Recorder.prototype.startrecording=function(){this.midixmltrk1='<Track Number="1">',this.isrecording||(this.isrecording=!0,this.ticks=0)},Recorder.prototype.updateticks=function(){this.ticks++},Recorder.prototype.recordevent=function(t,i,e,r){if(this.isrecording){var o="<Event>";o+="<Absolute>"+this.ticks+"</Absolute>",("NoteOn"==t||"NoteOff"==t)&&(o+="<"+t+" ",o+='Channel="1" ',o+='Note="'+e+'" ',o+='Velocity="'+r+'"/>'),o+="</Event>",this.midixmltrk1+=o}},Recorder.prototype.stoprecording=function(){this.isrecording&&(this.isrecording=!1,this.midixmltrk1+="<Event><Absolute>"+this.ticks+"</Absolute><EndOfTrack/></Event>",this.midixmltrk1+="</Track>",this.midixml=this.midixmlheader+this.midixmltrk0+this.midixmltrk1+this.midixmlclose)},Recorder.prototype.getmidixml=function(){return this.midixml?this.midixml:"No MIDIXML string to return. You must call this method After 'stoprecording' method."};